version: '3.1'

services:
  pihole:
    container_name: pi-hole
    image: pihole/pihole
    ports:
      - '53:53/tcp'
      - '53:53/udp'
      - '67:67/udp'
      - '8080:80/tcp'
      - '8081:443/tcp'
    environment:
      TZ: 'America/Argentina/Buenos_Aires'
    volumes:
      - 'pihole_data/:/etc/pihole/'
      - './pi-hole/etc-dnsmasq.d/:/etc/dnsmasq.d/' # TODO: name and backup
    cap_add:
      - NET_ADMIN
    restart: unless-stopped

  vaultwarden:
    container_name: vaultwarden
    image: vaultwarden/server
    environment:
      ROCKET_TLS: '{certs="/ssl/bitwarden.crt",key="/ssl/bitwarden.key"}' 
    ports:
      - '8200:80'
    volumes:
      - 'vaultwarden_data:/data/'
      - './bitwarden/certificates/:/ssl/'
    restart: unless-stopped

  # Documentation: <https://docs.miguelndecarvalho.pt/projects/speedtest-exporter>
  speedtest:
    container_name: speedtest
    image: miguelndecarvalho/speedtest-exporter
    restart: unless-stopped

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    volumes:
      - 'prometheus_data:/prometheus'
      - './prometheus/:/etc/prometheus/'
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=90d'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - '9090:9090'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    restart: unless-stopped

  grafana:
    container_name: grafana
    image: grafana/grafana
    volumes:
      - 'grafana_data:/var/lib/grafana'
      - './grafana/provisioning/:/etc/grafana/provisioning/'
    ports:
      - '3000:3000'
    restart: unless-stopped

  cadvisor:
    image: cadvisor
    container_name: cadvisor
    command: --docker_only=true
    build:
      context: cadvisor
    privileged: true
    volumes:
      - '/:/rootfs:ro'
      - '/var/run:/var/run:ro'
      - '/sys:/sys:ro'
      - '/var/lib/docker/:/var/lib/docker:ro'
      - '/dev/disk/:/dev/disk:ro'
    devices:
      - '/dev/kmsg:/dev/kmsg'
    restart: unless-stopped

  node_exporter:
    container_name: node_exporter
    image: quay.io/prometheus/node-exporter
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    network_mode: host
    pid: host
    volumes:
      - '/:/host:ro,rslave'
    restart: unless-stopped

  qbittorrent:
    container_name: qbittorrent
    image: lscr.io/linuxserver/qbittorrent:arm64v8-latest
    environment:
      - UMASK=003
      - PUID=1002 # qbittorrent
      - PGID=1003 # downloads
      - TZ=America/Argentina/Buenos_Aires
      - WEBUI_PORT=8010
    volumes:
      - qbittorrent_config:/config
      - /srv/dev-disk-by-uuid-86def75f-182c-4802-9f6a-b158f7df08b6/downloads:/downloads
    ports:
      - '6881:6881'
      - '6881:6881/udp'
      - '8010:8010'
    restart: unless-stopped

  home-assistant:
    container_name: home-assistant
    image: ghcr.io/home-assistant/raspberrypi4-homeassistant:stable
    volumes:
      - homeassistant_config:/config
      - /etc/localtime:/etc/localtime:ro
    privileged: true
    network_mode: host
    restart: unless-stopped

  # Video guide: 
  heimdall:
    container_name: heimdall
    image: lscr.io/linuxserver/heimdall
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Argentina/Buenos_Aires
    volumes:
      - heimdall_config:/config
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped

  # Github: <https://github.com/itzg/docker-minecraft-server>
  minecraft:
    image: itzg/minecraft-server
    container_name: minecraft
    tty: true
    stdin_open: true
    ports:
      - 25565:25565
    volumes:
      - minecraft_data:/data
    environment:
      # Server
      TYPE: paper
      TZ: America/Argentina/Buenos_Aires
      SERVER_NAME: Panteon
      OVERRIDE_ICON: 'true'
      ICON: https://i.ytimg.com/vi/fTZtmsTaijY/hqdefault.jpg
      MOTD: Never gonna give you up
      EULA: 'true'
      # Gameplay
      VERSION: 1.18.1
      DIFFICULTY: hard
      ONLINE_MODE: 'false'
      MODE: survival
      FORCE_GAMEMODE: 'true'
      # Optimizations
      GUI: 'false'
      MIN_MEMORY: 1G
      MAX_MEMORY: 4G
      MAX_PLAYERS: 10
      VIEW_DISTANCE: 12
      NETWORK_COMPRESSION_THRESHOLD: 256
      # Paper config
      CFG_DELAY-CHUNK-UNLOADS-BY: 10
      CFG_PREVENT_MOVING_INTO_UNLOADED_CHUNKS: 'true'
      MODS: 'https://github.com/timbru31/PasswordProtect/releases/download/PasswordProtect-3.1.0/PasswordProtect.jar'
    restart: unless-stopped

  # Guide: <https://dev.to/hendr_ik/automate-backing-up-your-docker-volumes-3gdk>
  # Github: <https://github.com/offen/docker-volume-backup>
  volume_backup:
    image: offen/docker-volume-backup:latest
    container_name: volume_backup
    environment:
      BACKUP_CRON_EXPRESSION: "0 4 * * *"
      BACKUP_FILENAME: backup-%Y-%m-%dT%H-%M-%S.tar.gz
      BACKUP_LATEST_SYMLINK: backup-latest.tar.gz
      BACKUP_PRUNING_PREFIX: backup-
      BACKUP_RETENTION_DAYS: 7
    volumes:
      # Required to stop containers
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Required for timezone
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      # Local backup location
      - /srv/dev-disk-by-uuid-86def75f-182c-4802-9f6a-b158f7df08b6/backups/system/pi/docker_volumes:/archive
      # Volumes to backup
      - heimdall_config:/backup/heimdall_config:ro
      - homeassistant_config:/backup/homeassistant_config:ro
      - qbittorrent_config:/backup/qbittorrent_config:ro
      - grafana_data:/backup/grafana_data:ro
      - minecraft_data:/backup/minecraft_data:ro
      - pihole_data:/backup/pihole_data:ro
      - vaultwarden_data:/backup/vaultwarden_data:ro
    restart: unless-stopped

  # Video guide: <https://www.youtube.com/watch?v=h_GGd7HfKQ8&>
  loki:
    image: grafana/loki
    container_name: loki
    command:
      - '--config.file=/etc/loki/loki-config.yml'
    volumes:
      - ./loki/config:/etc/loki
    ports:
      - 3100:3100
    restart: unless-stopped

  # Video guide: <https://www.youtube.com/watch?v=h_GGd7HfKQ8&>
  promtail:
    image: grafana/promtail
    container_name: promtail
    command:
      - '--config.file=/etc/promtail/promtail-config.yml'
    volumes:
      - /var/log:/var/log
      - ./promtail/config:/etc/promtail
    restart: unless-stopped

volumes:
  heimdall_config: {}
  homeassistant_config: {}
  qbittorrent_config: {}
  grafana_data: {}
  minecraft_data: {}
  pihole_data: {}
  prometheus_data: {}
  vaultwarden_data: {}
